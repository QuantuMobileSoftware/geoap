# Generated by Django 3.1 on 2021-01-05 10:44

from django.db import migrations


def add_permissions(apps, schema_editor):
    """
    Add permissions for JupyterNotebook model.
    :param apps:
    :param schema_editor:
    :return:
    """
    permission = apps.get_model("auth", "Permission")
    content_type = apps.get_model("contenttypes", "ContentType")
    
    notebook_def = apps.get_model("aoi", "JupyterNotebook")
    
    # Content type objects
    notebook_def_content_type = content_type.objects.get_for_model(notebook_def)
    
    db_alias = schema_editor.connection.alias
    
    permissions_data = [
        {"codename": "add_jupyternotebook", "name": "Can add JupyterNotebook", "content_type": notebook_def_content_type},
        {"codename": "change_jupyternotebook", "name": "Can change JupyterNotebook", "content_type": notebook_def_content_type},
        {"codename": "delete_jupyternotebook", "name": "Can delete JupyterNotebook", "content_type": notebook_def_content_type},
        {"codename": "view_jupyternotebook", "name": "Can view JupyterNotebook", "content_type": notebook_def_content_type},
    ]
    
    permission_list = []
    for permission_data in permissions_data:
        if not permission.objects.filter(codename=permission_data["codename"]).exists():
            permission_list.append(permission(codename=permission_data["codename"], name=permission_data["name"],
                                              content_type=permission_data["content_type"]))
    permission.objects.using(db_alias).bulk_create(permission_list)


def update_ds_engineer_group_permissions(apps, schema_editor):
    """
    Add 'view_jupyternotebook', 'delete_jupyternotebook', 'add_jupyternotebook', 'change_jupyternotebook'
    permission for 'Data_science_engineer' group
    """
    permission_model = apps.get_model('auth', 'Permission')
    group_model = apps.get_model("auth", "Group")
    
    db_alias = schema_editor.connection.alias
    
    group, _ = group_model.objects.using(db_alias).get_or_create(name="Data_science_engineer")
    group.permissions.add(permission_model.objects.using(db_alias).get(codename="view_jupyternotebook"))
    group.permissions.add(permission_model.objects.using(db_alias).get(codename="delete_jupyternotebook"))
    group.permissions.add(permission_model.objects.using(db_alias).get(codename="add_jupyternotebook"))
    group.permissions.add(permission_model.objects.using(db_alias).get(codename="change_jupyternotebook"))


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0004_add_client_group_update_ds_engineer_group'),
        ('aoi', '0010_jupyternotebook_options')
    ]

    operations = [
        migrations.RunPython(add_permissions),
        migrations.RunPython(update_ds_engineer_group_permissions)
    ]
