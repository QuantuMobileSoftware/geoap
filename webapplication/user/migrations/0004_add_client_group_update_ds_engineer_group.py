# Generated by Django 3.1 on 2020-12-10 09:30

from django.db import migrations


def add_client_group(apps, schema_editor):
    """
    Add 'Client' group.

    'Client' has next permissions:
    - AoI - Can add/change/delete/view permission
    - Result - Can view permission
    :param apps:
    :param schema_editor:
    :return:
    """
    group_model = apps.get_model("auth", "Group")
    permission_model = apps.get_model("auth", "Permission")
    user_model = apps.get_model("user", "User")

    db_alias = schema_editor.connection.alias

    # Adding 'Client' group
    permissions_code_names = ["add_aoi", "change_aoi", "delete_aoi", "view_aoi", "view_result"]
    permissions = permission_model.objects.using(db_alias).filter(codename__in=permissions_code_names)
    group, _ = group_model.objects.using(db_alias).get_or_create(name="Client")
    group.permissions.set(permissions)
    
    for user in user_model.objects.using(db_alias).all():
        if not user.is_staff:
            user.groups.add(group)
            
            
def update_ds_engineer_group_permissions(apps, schema_editor):
    """
    Add 'Can delete result'  permission for 'Data_science_engineer' group
    """
    permission_model = apps.get_model('auth', 'Permission')
    group_model = apps.get_model("auth", "Group")
    user_model = apps.get_model("user", "User")

    db_alias = schema_editor.connection.alias
    
    group, _ = group_model.objects.using(db_alias).get_or_create(name="Data_science_engineer")
    permission = permission_model.objects.using(db_alias).get(codename="delete_result")
    group.permissions.add(permission)
    
    for user in user_model.objects.using(db_alias).all():
        if user.is_staff:
            user.groups.add(group)
    

class Migration(migrations.Migration):
    
    dependencies = [
        ('user', '0003_add_groups_for_ds_engineer'),
    ]

    operations = [
        migrations.RunPython(add_client_group),
        migrations.RunPython(update_ds_engineer_group_permissions),
    ]
