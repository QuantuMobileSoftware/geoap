apiVersion: v1
kind: Namespace
metadata:
  name: sip
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: notebook-executor
  namespace: sip
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: notebook-executor
  namespace: sip
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch", "extensions"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: notebook-executor
  namespace: sip
subjects:
  - kind: ServiceAccount
    name: notebook-executor
    namespace: sip
roleRef:
  kind: Role
  name: notebook-executor
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: sip-secret
  namespace: sip
type: Opaque
data:
  postgresname: c2lw
  postgrespassword: ZWlKMmtvbzY=
  MAPBOX_ACCESS_TOKEN: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: sip
data:
  POSTGRES_DB: sip_db
  POSTGRES_HOST: postgres
  POSTGRES_PORT: "5432"
  DJANGO_SETTINGS_MODULE: sip.settings-prod
  NOTEBOOK_EXECUTION_ENVIRONMENT: "k8s"
  NOTEBOOK_VALIDATION_JOB_ACTIVE_DEADLINE: "3000"
  NOTEBOOK_JOB_BACKOFF_LIMIT: "1"
  K8S_NAME_SPACE: "sip"
  IMAGE_PULL_SECRETS: "regcred"
  NOTEBOOK_EXECUTOR_MAX_JOBS: "2"
  NOTEBOOK_POD_DATA_VOLUME_MOUNT_PATH: "/home/jovyan/work"
  GPU_CORES_PER_NOTEBOOK: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: sip
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv
  namespace: sip
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /db
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: postgres-pvc
    namespace: sip
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: sip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: sip
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgis/postgis:13-3.0
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: sip-secret
                key: postgresname
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sip-secret
                key: postgrespassword
        envFrom:
          - configMapRef:
              name: app-config
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresdb
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: postgres-pvc
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: sip-data-pv
  namespace: sip
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /data
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: sip-data-pvc
    namespace: sip
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sip-data-pvc
  namespace: sip
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: webapplication
  namespace: sip
  labels:
    app: web-application
spec:
  ports:
    - port: 9000
      targetPort: 9000
      name: webapplication
  selector:
    app: web-application
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapplication
  namespace: sip
spec:
  selector:
    matchLabels:
      app: web-application
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: web-application
    spec:
      containers:
        - name: web-application
          image: registry.quantumobile.co/sip-web-application:latest
          imagePullPolicy: "Always"
          command: ['/bin/bash', '-c', 'exec invoke run-prod']
          ports:
          - containerPort: 9000
            name: web-application
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: sip-secret
                  key: postgresname
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sip-secret
                  key: postgrespassword
          envFrom:
              - configMapRef:
                  name: app-config
          volumeMounts:
              - name: sip-data-volume
                mountPath: /data
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: sip-data-volume
          persistentVolumeClaim:
            claimName: sip-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: webserver-service
  namespace: sip
spec:
  type: NodePort
  selector:
    app: webserver
  ports:
    - port: 80
      targetPort: 80
      nodePort: 31080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
  namespace: sip
  labels:
    app: webserver
spec:
  selector:
    matchLabels:
      app: webserver
  template:
    metadata:
      labels:
        app: webserver
    spec:
      containers:
      - name: frontend
        image: registry.quantumobile.co/sip-web-server:latest
        imagePullPolicy: "Always"
        env:
          - name: MAPBOX_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: sip-secret
                key: MAPBOX_ACCESS_TOKEN
        envFrom:
              - configMapRef:
                  name: app-config
        ports:
        - containerPort: 80
          name: frontend
        volumeMounts:
          - mountPath: /data
            name: sip-data-storage
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: sip-data-storage
          persistentVolumeClaim:
            claimName: sip-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notebook-handler
  namespace: sip
spec:
  selector:
    matchLabels:
      app: notebook-handler
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: notebook-handler
    spec:
      serviceAccountName: notebook-executor
      restartPolicy: "Always"
      containers:
        - name: notebook-handler
          image: registry.quantumobile.co/sip-web-application:latest
          imagePullPolicy: "Always"
          command: ['/bin/bash', '-c', 'exec invoke run-notebook-executor-k8s']
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: sip-secret
                  key: postgresname
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sip-secret
                  key: postgrespassword
          envFrom:
              - configMapRef:
                  name: app-config
          volumeMounts:
              - name: sip-data-volume
                mountPath: /data
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: sip-data-volume
          persistentVolumeClaim:
            claimName: sip-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: publisher
  namespace: sip
spec:
  selector:
    matchLabels:
      app: publisher
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: publisher
    spec:
      restartPolicy: "Always"
      containers:
        - name: publisher
          image: registry.quantumobile.co/sip-web-application:latest
          imagePullPolicy: "Always"
          command: ['/bin/bash', '-c', 'exec invoke run-publisher-k8s']
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: sip-secret
                  key: postgresname
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sip-secret
                  key: postgrespassword
          envFrom:
              - configMapRef:
                  name: app-config
          volumeMounts:
              - name: sip-data-volume
                mountPath: /data
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: sip-data-volume
          persistentVolumeClaim:
            claimName: sip-data-pvc